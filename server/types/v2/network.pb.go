// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: server/v2/network.proto

package v2

import (
	v2 "github.com/Lagrange-Labs/lagrange-node/sequencer/types/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define the enum for the client node status
type ClientNodeStatus int32

const (
	ClientNodeStatus_UNKNOWN          ClientNodeStatus = 0 // Unknown status
	ClientNodeStatus_L1_RPC_ISSUE     ClientNodeStatus = 1 // L1 RPC issue
	ClientNodeStatus_L2_RPC_ISSUE     ClientNodeStatus = 2 // L2 RPC issue
	ClientNodeStatus_BEACON_RPC_ISSUE ClientNodeStatus = 3 // Beacon RPC issue
	ClientNodeStatus_INTERNAL_ISSUE   ClientNodeStatus = 4 // Internal issue
	ClientNodeStatus_BLS_KEY_ISSUE    ClientNodeStatus = 5 // BLS key issue
	ClientNodeStatus_SIGNER_KEY_ISSUE ClientNodeStatus = 6 // Signer key issue
)

// Enum value maps for ClientNodeStatus.
var (
	ClientNodeStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "L1_RPC_ISSUE",
		2: "L2_RPC_ISSUE",
		3: "BEACON_RPC_ISSUE",
		4: "INTERNAL_ISSUE",
		5: "BLS_KEY_ISSUE",
		6: "SIGNER_KEY_ISSUE",
	}
	ClientNodeStatus_value = map[string]int32{
		"UNKNOWN":          0,
		"L1_RPC_ISSUE":     1,
		"L2_RPC_ISSUE":     2,
		"BEACON_RPC_ISSUE": 3,
		"INTERNAL_ISSUE":   4,
		"BLS_KEY_ISSUE":    5,
		"SIGNER_KEY_ISSUE": 6,
	}
)

func (x ClientNodeStatus) Enum() *ClientNodeStatus {
	p := new(ClientNodeStatus)
	*p = x
	return p
}

func (x ClientNodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientNodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_server_v2_network_proto_enumTypes[0].Descriptor()
}

func (ClientNodeStatus) Type() protoreflect.EnumType {
	return &file_server_v2_network_proto_enumTypes[0]
}

func (x ClientNodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientNodeStatus.Descriptor instead.
func (ClientNodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{0}
}

// JoinNetworkRequest is the request to join the network
type JoinNetworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey    string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	StakeAddress string `protobuf:"bytes,2,opt,name=stake_address,json=stakeAddress,proto3" json:"stake_address,omitempty"`
	Signature    string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	NodeVersion  string `protobuf:"bytes,4,opt,name=node_version,json=nodeVersion,proto3" json:"node_version,omitempty"`
}

func (x *JoinNetworkRequest) Reset() {
	*x = JoinNetworkRequest{}
	mi := &file_server_v2_network_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinNetworkRequest) ProtoMessage() {}

func (x *JoinNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v2_network_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinNetworkRequest.ProtoReflect.Descriptor instead.
func (*JoinNetworkRequest) Descriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{0}
}

func (x *JoinNetworkRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *JoinNetworkRequest) GetStakeAddress() string {
	if x != nil {
		return x.StakeAddress
	}
	return ""
}

func (x *JoinNetworkRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *JoinNetworkRequest) GetNodeVersion() string {
	if x != nil {
		return x.NodeVersion
	}
	return ""
}

// JoinNetworkResponse is the response for joining the network
type JoinNetworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token             string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	PrevL2BlockNumber uint64 `protobuf:"varint,2,opt,name=prev_l2_block_number,json=prevL2BlockNumber,proto3" json:"prev_l2_block_number,omitempty"`
	PrevL1BlockNumber uint64 `protobuf:"varint,3,opt,name=prev_l1_block_number,json=prevL1BlockNumber,proto3" json:"prev_l1_block_number,omitempty"`
}

func (x *JoinNetworkResponse) Reset() {
	*x = JoinNetworkResponse{}
	mi := &file_server_v2_network_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinNetworkResponse) ProtoMessage() {}

func (x *JoinNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v2_network_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinNetworkResponse.ProtoReflect.Descriptor instead.
func (*JoinNetworkResponse) Descriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{1}
}

func (x *JoinNetworkResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JoinNetworkResponse) GetPrevL2BlockNumber() uint64 {
	if x != nil {
		return x.PrevL2BlockNumber
	}
	return 0
}

func (x *JoinNetworkResponse) GetPrevL1BlockNumber() uint64 {
	if x != nil {
		return x.PrevL1BlockNumber
	}
	return 0
}

// GetBatchRequest is the request to get the given block batch
type GetBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchNumber  uint64 `protobuf:"varint,1,opt,name=batch_number,json=batchNumber,proto3" json:"batch_number,omitempty"`
	StakeAddress string `protobuf:"bytes,2,opt,name=stake_address,json=stakeAddress,proto3" json:"stake_address,omitempty"`
	Token        string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetBatchRequest) Reset() {
	*x = GetBatchRequest{}
	mi := &file_server_v2_network_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchRequest) ProtoMessage() {}

func (x *GetBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v2_network_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchRequest.ProtoReflect.Descriptor instead.
func (*GetBatchRequest) Descriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{2}
}

func (x *GetBatchRequest) GetBatchNumber() uint64 {
	if x != nil {
		return x.BatchNumber
	}
	return 0
}

func (x *GetBatchRequest) GetStakeAddress() string {
	if x != nil {
		return x.StakeAddress
	}
	return ""
}

func (x *GetBatchRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// GetBatchResponse is the response for getting the given block batch
type GetBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batch *v2.Batch `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *GetBatchResponse) Reset() {
	*x = GetBatchResponse{}
	mi := &file_server_v2_network_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchResponse) ProtoMessage() {}

func (x *GetBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v2_network_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchResponse.ProtoReflect.Descriptor instead.
func (*GetBatchResponse) Descriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{3}
}

func (x *GetBatchResponse) GetBatch() *v2.Batch {
	if x != nil {
		return x.Batch
	}
	return nil
}

// CommitBatchRequest is the request to commit the signature
type CommitBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlsSignature *v2.BlsSignature `protobuf:"bytes,1,opt,name=bls_signature,json=blsSignature,proto3" json:"bls_signature,omitempty"`
	StakeAddress string           `protobuf:"bytes,2,opt,name=stake_address,json=stakeAddress,proto3" json:"stake_address,omitempty"`
	PublicKey    string           `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Token        string           `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CommitBatchRequest) Reset() {
	*x = CommitBatchRequest{}
	mi := &file_server_v2_network_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitBatchRequest) ProtoMessage() {}

func (x *CommitBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v2_network_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitBatchRequest.ProtoReflect.Descriptor instead.
func (*CommitBatchRequest) Descriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{4}
}

func (x *CommitBatchRequest) GetBlsSignature() *v2.BlsSignature {
	if x != nil {
		return x.BlsSignature
	}
	return nil
}

func (x *CommitBatchRequest) GetStakeAddress() string {
	if x != nil {
		return x.StakeAddress
	}
	return ""
}

func (x *CommitBatchRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *CommitBatchRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// CommitBatchResponse is the response for uploading the signature for the given block batch
type CommitBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CommitBatchResponse) Reset() {
	*x = CommitBatchResponse{}
	mi := &file_server_v2_network_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitBatchResponse) ProtoMessage() {}

func (x *CommitBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v2_network_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitBatchResponse.ProtoReflect.Descriptor instead.
func (*CommitBatchResponse) Descriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{5}
}

func (x *CommitBatchResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// UploadStatusRequest is the request to upload the status of the client node
type UploadStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       ClientNodeStatus `protobuf:"varint,1,opt,name=status,proto3,enum=network.v2.ClientNodeStatus" json:"status,omitempty"`
	StakeAddress string           `protobuf:"bytes,2,opt,name=stake_address,json=stakeAddress,proto3" json:"stake_address,omitempty"`
	PublicKey    string           `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Token        string           `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Message      string           `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UploadStatusRequest) Reset() {
	*x = UploadStatusRequest{}
	mi := &file_server_v2_network_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStatusRequest) ProtoMessage() {}

func (x *UploadStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v2_network_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStatusRequest.ProtoReflect.Descriptor instead.
func (*UploadStatusRequest) Descriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{6}
}

func (x *UploadStatusRequest) GetStatus() ClientNodeStatus {
	if x != nil {
		return x.Status
	}
	return ClientNodeStatus_UNKNOWN
}

func (x *UploadStatusRequest) GetStakeAddress() string {
	if x != nil {
		return x.StakeAddress
	}
	return ""
}

func (x *UploadStatusRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *UploadStatusRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UploadStatusRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// UploadStatusResponse is the response for uploading the status of the client node
type UploadStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UploadStatusResponse) Reset() {
	*x = UploadStatusResponse{}
	mi := &file_server_v2_network_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStatusResponse) ProtoMessage() {}

func (x *UploadStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v2_network_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStatusResponse.ProtoReflect.Descriptor instead.
func (*UploadStatusResponse) Descriptor() ([]byte, []int) {
	return file_server_v2_network_proto_rawDescGZIP(), []int{7}
}

func (x *UploadStatusResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_server_v2_network_proto protoreflect.FileDescriptor

var file_server_v2_network_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x32, 0x1a, 0x18, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72,
	0x2f, 0x76, 0x32, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x99, 0x01, 0x0a, 0x12, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x13,
	0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x72, 0x65,
	0x76, 0x5f, 0x6c, 0x32, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x4c, 0x32, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x72,
	0x65, 0x76, 0x5f, 0x6c, 0x31, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x4c, 0x31,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3d, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0xaf, 0x01, 0x0a, 0x12,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x6c, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6c, 0x73, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0c, 0x62, 0x6c, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2d, 0x0a,
	0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01, 0x0a,
	0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e,
	0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x96,
	0x01, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x31, 0x5f, 0x52, 0x50, 0x43, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x32, 0x5f, 0x52, 0x50, 0x43, 0x5f, 0x49, 0x53, 0x53,
	0x55, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x52,
	0x50, 0x43, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x42, 0x4c, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10,
	0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x06, 0x32, 0xcc, 0x02, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x4a, 0x6f,
	0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1e, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x1e, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2d, 0x4c, 0x61,
	0x62, 0x73, 0x2f, 0x6c, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2d, 0x6e, 0x6f, 0x64, 0x65,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_v2_network_proto_rawDescOnce sync.Once
	file_server_v2_network_proto_rawDescData = file_server_v2_network_proto_rawDesc
)

func file_server_v2_network_proto_rawDescGZIP() []byte {
	file_server_v2_network_proto_rawDescOnce.Do(func() {
		file_server_v2_network_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_v2_network_proto_rawDescData)
	})
	return file_server_v2_network_proto_rawDescData
}

var file_server_v2_network_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_v2_network_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_server_v2_network_proto_goTypes = []any{
	(ClientNodeStatus)(0),        // 0: network.v2.ClientNodeStatus
	(*JoinNetworkRequest)(nil),   // 1: network.v2.JoinNetworkRequest
	(*JoinNetworkResponse)(nil),  // 2: network.v2.JoinNetworkResponse
	(*GetBatchRequest)(nil),      // 3: network.v2.GetBatchRequest
	(*GetBatchResponse)(nil),     // 4: network.v2.GetBatchResponse
	(*CommitBatchRequest)(nil),   // 5: network.v2.CommitBatchRequest
	(*CommitBatchResponse)(nil),  // 6: network.v2.CommitBatchResponse
	(*UploadStatusRequest)(nil),  // 7: network.v2.UploadStatusRequest
	(*UploadStatusResponse)(nil), // 8: network.v2.UploadStatusResponse
	(*v2.Batch)(nil),             // 9: sequencer.v2.Batch
	(*v2.BlsSignature)(nil),      // 10: sequencer.v2.BlsSignature
}
var file_server_v2_network_proto_depIdxs = []int32{
	9,  // 0: network.v2.GetBatchResponse.batch:type_name -> sequencer.v2.Batch
	10, // 1: network.v2.CommitBatchRequest.bls_signature:type_name -> sequencer.v2.BlsSignature
	0,  // 2: network.v2.UploadStatusRequest.status:type_name -> network.v2.ClientNodeStatus
	1,  // 3: network.v2.NetworkService.JoinNetwork:input_type -> network.v2.JoinNetworkRequest
	3,  // 4: network.v2.NetworkService.GetBatch:input_type -> network.v2.GetBatchRequest
	5,  // 5: network.v2.NetworkService.CommitBatch:input_type -> network.v2.CommitBatchRequest
	7,  // 6: network.v2.NetworkService.UploadStatus:input_type -> network.v2.UploadStatusRequest
	2,  // 7: network.v2.NetworkService.JoinNetwork:output_type -> network.v2.JoinNetworkResponse
	4,  // 8: network.v2.NetworkService.GetBatch:output_type -> network.v2.GetBatchResponse
	6,  // 9: network.v2.NetworkService.CommitBatch:output_type -> network.v2.CommitBatchResponse
	8,  // 10: network.v2.NetworkService.UploadStatus:output_type -> network.v2.UploadStatusResponse
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_server_v2_network_proto_init() }
func file_server_v2_network_proto_init() {
	if File_server_v2_network_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_v2_network_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_v2_network_proto_goTypes,
		DependencyIndexes: file_server_v2_network_proto_depIdxs,
		EnumInfos:         file_server_v2_network_proto_enumTypes,
		MessageInfos:      file_server_v2_network_proto_msgTypes,
	}.Build()
	File_server_v2_network_proto = out.File
	file_server_v2_network_proto_rawDesc = nil
	file_server_v2_network_proto_goTypes = nil
	file_server_v2_network_proto_depIdxs = nil
}
