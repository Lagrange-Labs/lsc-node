version: "3.7"

services:
  simsequencer:
    container_name: sequencer
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.2
    ports:
      - 8082:8080
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-sequencer"
    environment:
      - LAGRANGE_NODE_RPCCLIENT_MOCK_RPCURL=http://192.168.20.100:8545
      - LAGRANGE_NODE_STORE_DBPATH=mongodb://192.168.20.101:27017
      - LAGRANGE_NODE_SEQUENCER_ETHEREUMURL=http://192.168.20.100:8545
  simavs-sync:
    container_name: avs-sync
    image: lagrangelabs/avs-sync:main
    networks:
      localnet:
        ipv4_address: 192.168.20.50
    command:
      - "/bin/sh"
      - "-c"
      - "/app/avs-sync"
    environment:
      - AVS_SYNC_SYNCHRONIZER_PRIVATEKEY=0x897ae21c31176946115ad9174145c2e8b755e1be0c1b4987a63db790349e8e15
      - AVS_SYNC_SYNCHRONIZER_RPCENDPOINT=http://192.168.20.100:8545
      - AVS_SYNC_SYNCHRONIZER_EIGENDELEGATIONMANAGERADDRESS=0xF2740f6A6333c7B405aD7EfC68c74adAd83cC30D
      - AVS_SYNC_SYNCHRONIZER_LAGRANGESTAKEMANAGERADDRESS=0x2445aC9Eb7Bcb502EbabCb63844eFe4049270f93
      - AVS_SYNC_SYNCHRONIZER_LAGRANGESERVICEADDRESS=0xBda41273d671bb33374F7b9C4Ae8746c712727f7
      - AVS_SYNC_SYNCHRONIZER_VOTEWEIGHERADDRESS=0x47836868bCC9Fd592824444D0F428012d3b057f1
      - AVS_SYNC_SYNCHRONIZER_COMMITTEEADDRESS=0xBF4E09354df24900e3d2A1e9057a9F7601fbDD06
      - AVS_SYNC_SYNCHRONIZER_SYNCINTERVAL=2
      - AVS_SYNC_SYNCHRONIZER_RETRYTIMEINTERVAL=2
  simsigner:
    container_name: signer
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.88
    ports:
      - 50051:9090
    volumes:
      - ./testutil/vector/config:/app/config
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-signer -c /app/config/signer_config.toml"
  simserver:
    container_name: server
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.3
    volumes:
      - ./testutil/vector/config:/app/config
    ports:
      - 9090:9090
      - 6061:6060
      - 8083:8080
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-server"
    environment:
      - LAGRANGE_NODE_RPCCLIENT_MOCK_RPCURL=http://192.168.20.100:8545
      - LAGRANGE_NODE_STORE_DBPATH=mongodb://192.168.20.101:27017
      - LAGRANGE_NODE_CONSENSUS_PROPOSERBLSKEYSTOREPATH=/app/config/bls_0.json
      - LAGRANGE_NODE_CONSENSUS_PROPOSERBLSKEYSTOREPASSWORD=password_localtest
      - LAGRANGE_NODE_SEQUENCER_ETHEREUMURL=http://192.168.20.100:8545
  simserver1:
    container_name: server1
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.33
    volumes:
      - ./testutil/vector/config:/app/config
    ports:
      - 9092:9090
      - 6062:6060
      - 8085:8080
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-server"
    environment:
      - LAGRANGE_NODE_RPCCLIENT_MOCK_RPCURL=http://192.168.20.100:8545
      - LAGRANGE_NODE_STORE_DBPATH=mongodb://192.168.20.101:27017
      - LAGRANGE_NODE_CONSENSUS_PROPOSERBLSKEYSTOREPATH=/app/config/bls_0.json
      - LAGRANGE_NODE_CONSENSUS_PROPOSERBLSKEYSTOREPASSWORD=password_localtest
      - LAGRANGE_NODE_SEQUENCER_ETHEREUMURL=http://192.168.20.100:8545
  simnode1:
    container_name: node1
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.4
    volumes:
      - ./testutil/vector/config:/app/config
    ports:
      - 8084:8080
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-client -c /app/config/client_config_1.toml"
  simnode2:
    container_name: node2
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.5
    volumes:
      - ./testutil/vector/config:/app/config
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-client -c /app/config/client_config_2.toml"
  simnode3:
    container_name: node3
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.6
    volumes:
      - ./testutil/vector/config:/app/config
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-client -c /app/config/client_config_3.toml"
  simnode4:
    container_name: node4
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.7
    volumes:
      - ./testutil/vector/config:/app/config
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-client -c /app/config/client_config_4.toml"
  simnode5:
    container_name: node5
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.8
    volumes:
      - ./testutil/vector/config:/app/config
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-client -c /app/config/client_config_5.toml"
  simnode6:
    container_name: node6
    image: lagrange-node
    networks:
      localnet:
        ipv4_address: 192.168.20.9
    volumes:
      - ./testutil/vector/config:/app/config
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-client -c /app/config/client_config_6.toml"
  simnode7:
    container_name: node7
    image: lagrange-node
    
    networks:
      localnet:
        ipv4_address: 192.168.20.10
    volumes:
      - ./testutil/vector/config:/app/config
    command:
      - "/bin/sh"
      - "-c"
      - "/app/lagrange-node run-client -c /app/config/client_config_7.toml"
  lagrangesc:
    container_name: lagrange-smart-contract
    image: lagrangelabs/lagrange-contracts:develop
    networks:
      localnet:
        ipv4_address: 192.168.20.100
    ports:
      - "8545:8545"
  mongo:
    image: mongo:4.4
    container_name: mongo
    networks:
      localnet:
        ipv4_address: 192.168.20.101
    ports:
      - "27017:27017"
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9091:9090"
    networks:
      localnet:
        ipv4_address: 192.168.20.102
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    networks:
      localnet:
        ipv4_address: 192.168.20.103

networks:
  localnet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.20.0/24
